var version="v2.2.11";self.addEventListener("install",function(o){console.log("WORKER: install event in progress."),o.waitUntil(caches.open(version+"fundamentals").then(function(o){return o.addAll(["/","/js/require.js","/js/app.js","/css/style.css","/css/fonts/Material+Icons_400_normal.svg","/css/fonts/Material+Icons_400_normal.ttf","/css/fonts/Material+Icons_400_normal.woff","/css/fonts/Roboto_400_normal.svg","/css/fonts/Roboto_400_normal.ttf","/css/fonts/Roboto_400_normal.woff","/css/fonts/Roboto_500_normal.ttf","/css/fonts/Roboto_500_normal.woff","/css/fonts/Roboto_700_normal.ttf","/css/fonts/Roboto_700_normal.woff","/css/fonts/Source+Code+Pro_300_normal.ttf","/css/fonts/Source+Code+Pro_300_normal.woff","/css/fonts/Source+Code+Pro_400_normal.svg","/css/fonts/Source+Code+Pro_400_normal.ttf","/css/fonts/Source+Code+Pro_400_normal.woff","/css/fonts/Source+Code+Pro_600_normal.ttf","/css/fonts/Source+Code+Pro_600_normal.woff","/css/fonts/Source+Code+Pro_700_normal.ttf","/css/fonts/Source+Code+Pro_700_normal.woff"])}).then(function(){console.log("WORKER: install completed")}))}),self.addEventListener("fetch",function(o){return console.log("WORKER: fetch event in progress."),"GET"!==o.request.method?void console.log("WORKER: fetch event ignored.",o.request.method,o.request.url):void o.respondWith(caches.match(o.request).then(function(e){function t(e){var t=e.clone();return console.log("WORKER: fetch response from network.",o.request.url),caches.open(version+"pages").then(function(e){e.put(o.request,t)}).then(function(){console.log("WORKER: fetch response stored in cache.",o.request.url)}),e}function n(){return console.log("WORKER: fetch request failed in both cache and network."),new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})})}var s=fetch(o.request).then(t,n).catch(n);return console.log("WORKER: fetch event",e?"(cached)":"(network)",o.request.url),e||s}))}),self.addEventListener("activate",function(o){console.log("WORKER: activate event in progress."),o.waitUntil(caches.keys().then(function(o){return Promise.all(o.filter(function(o){return!o.startsWith(version)}).map(function(o){return caches.delete(o)}))}).then(function(){console.log("WORKER: activate completed.")}))});